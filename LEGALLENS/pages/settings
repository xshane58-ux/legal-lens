
import React, { useState, useEffect } from "react";
import { User } from "@/entities/all";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Alert, AlertDescription } from "@/components/ui/alert";
import { Badge } from "@/components/ui/badge";
import { 
  Settings as SettingsIcon, 
  Languages, 
  Shield, 
  Bell,
  CheckCircle,
  Info
} from "lucide-react";
import { motion } from "framer-motion";

export default function Settings() {
  const [user, setUser] = useState(null);
  const [settings, setSettings] = useState({
    preferred_language: "english",
    subscription_tier: "free",
    documents_analyzed: 0
  });
  const [saving, setSaving] = useState(false);
  const [saved, setSaved] = useState(false);

  useEffect(() => {
    loadUserSettings();
  }, []);

  const loadUserSettings = async () => {
    try {
      const currentUser = await User.me();
      setUser(currentUser);
      setSettings({
        preferred_language: currentUser.preferred_language || "english",
        subscription_tier: currentUser.subscription_tier || "free",
        documents_analyzed: currentUser.documents_analyzed || 0
      });
    } catch (error) {
      console.error("Failed to load user settings:", error);
    }
  };

  const saveSettings = async () => {
    setSaving(true);
    try {
      await User.updateMyUserData({
        preferred_language: settings.preferred_language
      });
      setSaved(true);
      setTimeout(() => setSaved(false), 3000);
    } catch (error) {
      console.error("Failed to save settings:", error);
    }
    setSaving(false);
  };

  const handleLanguageChange = (language) => {
    setSettings(prev => ({ ...prev, preferred_language: language }));
  };

  const subscriptionFeatures = {
    free: {
      name: "Free Plan",
      color: "bg-slate-100 text-slate-800",
      features: [
        "Unlimited document analysis",
        "Basic red flag detection",
        "Multi-language support",
        "Standard support"
      ]
    }
  };

  const languageOptions = [
    { value: "english", label: "English", flag: "🇺🇸" },
    { value: "hindi", label: "हिंदी (Hindi)", flag: "🇮🇳" },
    { value: "tamil", label: "தமிழ் (Tamil)", flag: "🇮🇳" },
    { value: "bengali", label: "বাংলা (Bengali)", flag: "🇮🇳" },
    { value: "telugu", label: "తెలుగు (Telugu)", flag: "🇮🇳" },
    { value: "marathi", label: "मराठी (Marathi)", flag: "🇮🇳" },
    { value: "gujarati", label: "ગુજરાતી (Gujarati)", flag: "🇮🇳" },
    { value: "kannada", label: "ಕನ್ನಡ (Kannada)", flag: "🇮🇳" },
    { value: "malayalam", label: "മലയാളം (Malayalam)", flag: "🇮🇳" },
    { value: "punjabi", label: "ਪੰਜਾਬੀ (Punjabi)", flag: "🇮🇳" },
    { value: "odia", label: "ଓଡ଼ିଆ (Odia)", flag: "🇮🇳" },
    { value: "assamese", label: "অসমীয়া (Assamese)", flag: "🇮🇳" },
    { value: "urdu", label: "اردو (Urdu)", flag: "🇮🇳" },
    { value: "sanskrit", label: "संस्कृतम् (Sanskrit)", flag: "🇮🇳" }
  ];

  if (!user) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-50 p-6">
        <div className="max-w-4xl mx-auto">
          <div className="text-center py-12">
            <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4"></div>
            <p className="text-slate-600">Loading settings...</p>
          </div>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-50 p-6">
      <div className="max-w-4xl mx-auto">
        {/* Header */}
        <motion.div 
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6 }}
          className="flex justify-between items-start mb-8"
        >
          <div>
            <h1 className="text-3xl md:text-4xl font-bold text-slate-900 mb-2">Settings</h1>
            <p className="text-slate-600">Customize your LegalLens experience</p>
          </div>
          <Button 
            variant="outline"
            onClick={async () => {
              try {
                await User.logout();
              } catch (error) {
                console.error("Logout failed:", error);
              }
            }}
            className="text-red-600 border-red-200 hover:bg-red-50 hover:text-red-700"
          >
            Logout Account
          </Button>
        </motion.div>

        {saved && (
          <motion.div
            initial={{ opacity: 0, y: -10 }}
            animate={{ opacity: 1, y: 0 }}
            className="mb-6"
          >
            <Alert className="bg-green-50 border-green-200">
              <CheckCircle className="h-4 w-4 text-green-600" />
              <AlertDescription className="text-green-800">
                Settings saved successfully!
              </AlertDescription>
            </Alert>
          </motion.div>
        )}

        <div className="grid lg:grid-cols-3 gap-8">
          {/* Main Settings */}
          <div className="lg:col-span-2 space-y-6">
            {/* Profile Information */}
            <motion.div
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.6, delay: 0.1 }}
            >
              <Card className="bg-white/80 backdrop-blur-sm border-none shadow-lg">
                <CardHeader>
                  <CardTitle className="flex items-center gap-2">
                    <SettingsIcon className="w-5 h-5 text-blue-600" />
                    Profile Information
                  </CardTitle>
                </CardHeader>
                <CardContent className="space-y-4">
                  <div className="grid md:grid-cols-2 gap-4">
                    <div>
                      <label className="text-sm font-medium text-slate-600">Full Name</label>
                      <p className="text-lg text-slate-900 mt-1">{user.full_name || "Not provided"}</p>
                    </div>
                    <div>
                      <label className="text-sm font-medium text-slate-600">Email</label>
                      <p className="text-lg text-slate-900 mt-1">{user.email}</p>
                    </div>
                    <div>
                      <label className="text-sm font-medium text-slate-600">Role</label>
                      <Badge className="mt-1">
                        {user.role?.toUpperCase() || "USER"}
                      </Badge>
                    </div>
                    <div>
                      <label className="text-sm font-medium text-slate-600">Documents Analyzed</label>
                      <p className="text-lg font-bold text-blue-600 mt-1">
                        {settings.documents_analyzed}
                      </p>
                    </div>
                  </div>
                </CardContent>
              </Card>
            </motion.div>

            {/* Language Preferences */}
            <motion.div
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.6, delay: 0.2 }}
            >
              <Card className="bg-white/80 backdrop-blur-sm border-none shadow-lg">
                <CardHeader>
                  <CardTitle className="flex items-center gap-2">
                    <Languages className="w-5 h-5 text-green-600" />
                    Language Preferences
                  </CardTitle>
                </CardHeader>
                <CardContent className="space-y-4">
                  <div>
                    <label className="text-sm font-medium text-slate-600 mb-3 block">
                      Preferred Language for Document Explanations
                    </label>
                    <Select 
                      value={settings.preferred_language} 
                      onValueChange={handleLanguageChange}
                    >
                      <SelectTrigger className="h-12">
                        <SelectValue />
                      </SelectTrigger>
                      <SelectContent>
                        {languageOptions.map((lang) => (
                          <SelectItem key={lang.value} value={lang.value}>
                            <div className="flex items-center gap-3">
                              <span className="text-lg">{lang.flag}</span>
                              <span>{lang.label}</span>
                            </div>
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                    <p className="text-sm text-slate-500 mt-2">
                      Legal document summaries and red flag explanations will be provided in this language.
                    </p>
                  </div>

                  <div className="flex justify-end">
                    <Button 
                      onClick={saveSettings} 
                      disabled={saving}
                      className="bg-blue-600 hover:bg-blue-700"
                    >
                      {saving ? "Saving..." : "Save Settings"}
                    </Button>
                  </div>
                </CardContent>
              </Card>
            </motion.div>

            {/* Privacy & Security */}
            <motion.div
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.6, delay: 0.3 }}
            >
              <Card className="bg-white/80 backdrop-blur-sm border-none shadow-lg">
                <CardHeader>
                  <CardTitle className="flex items-center gap-2">
                    <Shield className="w-5 h-5 text-purple-600" />
                    Privacy & Security
                  </CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="space-y-4">
                    <Alert className="bg-blue-50 border-blue-200">
                      <Info className="h-4 w-4 text-blue-600" />
                      <AlertDescription className="text-blue-800">
                        <strong>Your Privacy is Protected:</strong>
                        <ul className="mt-2 space-y-1 text-sm">
                          <li>• Documents are processed securely and not stored permanently</li>
                          <li>• Only analysis results are saved to your account</li>
                          <li>• We never share your legal documents with third parties</li>
                          <li>• All data is encrypted in transit and at rest</li>
                        </ul>
                      </AlertDescription>
                    </Alert>

                    <div className="grid md:grid-cols-2 gap-4">
                      <div className="text-center p-4 bg-green-50 rounded-lg">
                        <Shield className="w-8 h-8 text-green-600 mx-auto mb-2" />
                        <h4 className="font-semibold text-slate-900">Secure Processing</h4>
                        <p className="text-sm text-slate-600 mt-1">
                          Bank-level encryption for all documents
                        </p>
                      </div>
                      <div className="text-center p-4 bg-blue-50 rounded-lg">
                        <Bell className="w-8 h-8 text-blue-600 mx-auto mb-2" />
                        <h4 className="font-semibold text-slate-900">No Spam</h4>
                        <p className="text-sm text-slate-600 mt-1">
                          We only send important notifications
                        </p>
                      </div>
                    </div>
                  </div>
                </CardContent>
              </Card>
            </motion.div>
          </div>

          {/* Subscription Sidebar */}
          <div className="space-y-6">
            {/* Current Plan */}
            <motion.div
              initial={{ opacity: 0, x: 20 }}
              animate={{ opacity: 1, x: 0 }}
              transition={{ duration: 0.6, delay: 0.2 }}
            >
              <Card className="bg-white/80 backdrop-blur-sm border-none shadow-lg">
                <CardHeader>
                  <CardTitle className="text-lg">Current Plan</CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="text-center">
                    <Badge className="bg-slate-100 text-slate-800 px-4 py-2 text-sm font-semibold">
                      Free Plan
                    </Badge>
                    <div className="mt-4 space-y-2">
                      <div className="flex items-center gap-2 text-sm text-slate-600">
                        <CheckCircle className="w-4 h-4 text-green-500" />
                        <span>Unlimited document analysis</span>
                      </div>
                      <div className="flex items-center gap-2 text-sm text-slate-600">
                        <CheckCircle className="w-4 h-4 text-green-500" />
                        <span>Basic red flag detection</span>
                      </div>
                      <div className="flex items-center gap-2 text-sm text-slate-600">
                        <CheckCircle className="w-4 h-4 text-green-500" />
                        <span>Multi-language support</span>
                      </div>
                      <div className="flex items-center gap-2 text-sm text-slate-600">
                        <CheckCircle className="w-4 h-4 text-green-500" />
                        <span>Standard support</span>
                      </div>
                    </div>
                    <Button 
                      className="w-full mt-4 bg-gradient-to-r from-blue-600 to-indigo-600 hover:from-blue-700 hover:to-indigo-700"
                      onClick={() => {
                        // Blank popup for now
                        alert("Upgrade options coming soon!");
                      }}
                    >
                      Upgrade Plan
                    </Button>
                  </div>
                </CardContent>
              </Card>
            </motion.div>

            {/* Usage Stats */}
            <motion.div
              initial={{ opacity: 0, x: 20 }}
              animate={{ opacity: 1, x: 0 }}
              transition={{ duration: 0.6, delay: 0.3 }}
            >
              <Card className="bg-gradient-to-br from-blue-600 to-indigo-600 text-white border-none shadow-lg">
                <CardContent className="p-6">
                  <h3 className="font-bold text-lg mb-4">Your Stats</h3>
                  <div className="space-y-3">
                    <div className="flex justify-between items-center">
                      <span className="text-blue-100">Documents Analyzed</span>
                      <span className="font-bold">{settings.documents_analyzed}</span>
                    </div>
                    <div className="flex justify-between items-center">
                      <span className="text-blue-100">Account Status</span>
                      <span className="font-bold">Active</span>
                    </div>
                  </div>
                </CardContent>
              </Card>
            </motion.div>

            {/* Support */}
            <motion.div
              initial={{ opacity: 0, x: 20 }}
              animate={{ opacity: 1, x: 0 }}
              transition={{ duration: 0.6, delay: 0.4 }}
            >
              <Card className="bg-white/80 backdrop-blur-sm border-none shadow-lg">
                <CardHeader>
                  <CardTitle className="text-lg">Need Help?</CardTitle>
                </CardHeader>
                <CardContent>
                  <p className="text-sm text-slate-600 mb-4">
                    Our support team is here to help you understand your legal documents better.
                  </p>
                  <Button variant="outline" className="w-full">
                    Contact Support
                  </Button>
                </CardContent>
              </Card>
            </motion.div>
          </div>
        </div>
      </div>
    </div>
  );
}
